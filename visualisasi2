import pandas as pd
import plotly.graph_objects as go

# Mengatur file path dan sheet name
file_path = '/Users/macbookair/Documents/pyhton folder/Virtual Pyhton/Data  Izin All - DPMPTSP - Dimas.xlsx'
sheet_name = 'Data Izin All'

# Membaca data dari Excel
df = pd.read_excel(file_path, sheet_name=sheet_name)

# Filter data untuk 'Kantor Lurah Balimester'
filtered_df = df[df['service_point'] == 'Kantor Lurah Balimester']

if filtered_df.empty:
    print("Tidak ada data untuk 'Kantor Lurah Balimester'.")
else:
    # Menghitung total izin berdasarkan status
    total_izin_diajukan = filtered_df['total_diajukan'].sum()
    total_selesai = filtered_df['total_selesai'].sum()
    total_ditolak_dibatalkan = filtered_df['total_di_tolak'].sum() + filtered_df['total_dibatalkan'].sum()
    total_dalam_proses = filtered_df['total_proses'].sum()

    # Membuat layout untuk menampilkan angka
    fig = go.Figure()

    # Menambahkan kotak dengan total izin diajukan
    fig.add_trace(go.Indicator(
        mode="number+delta",
        value=total_izin_diajukan,
        title={"text": "Total Izin Diajukan"},
        domain={'row': 0, 'column': 0}
    ))

    # Menambahkan kotak dengan total selesai
    fig.add_trace(go.Indicator(
        mode="number+delta",
        value=total_selesai,
        title={"text": "Total Selesai Diproses"},
        domain={'row': 0, 'column': 1}
    ))

    # Menambahkan kotak dengan total ditolak & dibatalkan
    fig.add_trace(go.Indicator(
        mode="number+delta",
        value=total_ditolak_dibatalkan,
        title={"text": "Total Ditolak & Dibatalkan"},
        domain={'row': 1, 'column': 0}
    ))

    # Menambahkan kotak dengan total dalam proses
    fig.add_trace(go.Indicator(
        mode="number+delta",
        value=total_dalam_proses,
        title={"text": "Total Masih Diproses"},
        domain={'row': 1, 'column': 1}
    ))

    # Mengatur layout untuk angka
    fig.update_layout(
        grid={'rows': 2, 'columns': 2},
        title_text="Data Izin Kantor Lurah Balimester",
        height=400
    )

    # Bagian tengah: Pie chart
    pie_data = filtered_df['Bidang_Recode'].value_counts()
    fig.add_trace(go.Pie(
        labels=pie_data.index,
        values=pie_data.values,
        title='Kategori Bidang Izin yang Dominan',
        domain={'x': [0.1, 0.9], 'y': [0.4, 1]},
    ))

    # Menampilkan figure untuk tipe permohonan
    fig.update_layout(title_text='Tipe Permohonan')
    fig.show()

    # Membuat figure baru untuk bidang per kecamatan
    fig_bidang = go.Figure()

    # Bagian bawah: Stacked bar chart untuk Bidang per Kecamatan
    stacked_data_bidang = filtered_df.groupby(['Kec', 'Bidang_Recode']).size().reset_index(name='count')

    # Menambahkan trace untuk setiap bidang
    for bidang in stacked_data_bidang['Bidang_Recode'].unique():
        count = stacked_data_bidang[stacked_data_bidang['Bidang_Recode'] == bidang]['count']
        kecamatan = stacked_data_bidang[stacked_data_bidang['Bidang_Recode'] == bidang]['Kec']
        fig_bidang.add_trace(go.Bar(
            x=kecamatan,
            y=count,
            name=bidang,
            marker_color='orange'  # Ubah warna sesuai kebutuhan
        ))


    # Menampilkan figure bidang per kecamatan
    fig_bidang.show()